# .github/workflows/bithub-release.yml
name: ".bit Hub-Compliant Release"
on:
  workflow_dispatch:
  release:
    types: [published]

env:
  COMPLIANCE_LEVEL: "full"
  SPDX_REPORT_PATH: "./spdx-license-check.json"

jobs:
  verify-release:
    name: ".bit: Release Policy & Compliance"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      id-token: write
      attestations: write
    steps:
      - name: ".bit: Checkout code for release"
        uses: actions/checkout@v4

      - name: ".bit: Verify SPDX licenses"
        uses: philips-labs/spdx-action@v1
        with:
          outputFile: ${{ env.SPDX_REPORT_PATH }}

      - name: ".bit: Check legal compliance (Copyright, Attribution, Grimoire.md refs)"
        run: |
          grep -ir 'grimoire' . || true
          grep -ir 'copyright' . || true
          if grep -q 'grimoire' .; then
            echo "NOTICE: Repository includes or builds on Grimoire.md. Attribution must be included."
            echo "If using Nereare's Grimoire Jekyll theme (MIT) or Go CLI (MIT), retain their LICENSE and CREDIT in docs, code, or README."
          fi
          if grep -q 'copyright' .; then
            echo "INFO: Copyright declarations detected."
          fi
          echo "Refer to CONTRIBUTING.md for legal requirements, attribution, and compliance contacts."
        shell: bash

      - name: ".bit: Check release complies with export, trade, and security controls"
        run: |
          curl -sSL https://github.com/github/export-control-check#readme || echo "Check manual compliance with U.S. export controls, sanctions, and embargoes as required by GitHub policy."
          echo "Review docs.github.com/en/site-policy/github-and-trade-controls"

      - name: ".bit: SPDX Report summary"
        run: cat "${{ env.SPDX_REPORT_PATH }}"
        if: always()

      - name: ".bit: GPG sign release notes"
        run: |
          if [ -f RELEASE_NOTES.md ]; then
            gpg --batch --yes --armor --detach-sign RELEASE_NOTES.md
            echo "Release notes GPG-signed."
          else
            echo "No release notes found to sign in root."
          fi

      - name: ".bit: Create GitHub Release (API/CLI)"
        if: github.event_name == 'workflow_dispatch'
        run: |
          curl -X POST "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                    "tag_name": "v${{ github.run_number }}",
                    "target_commitish": "${GITHUB_SHA}",
                    "name": "Release v${{ github.run_number }}",
                    "body": "Automated Bit.Hub-compliant release. SPDX, legal, and export controls verified.",
                    "draft": false,
                    "prerelease": false
                }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ".bit: Upload release assets (if any)"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            RELEASE_NOTES.md
            RELEASE_NOTES.md.asc
            ${{ env.SPDX_REPORT_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ".bit: Attest release for supply chain"
        uses: testifysec/archivista-action@v0.10.1
        with:
          type: "git-release"
          predicate: "spdx"
          path: ${{ env.SPDX_REPORT_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ".bit: Generate summary"
        run: |
          echo "### Release passed Bit.Hub/GitHub compliance and audit controls." >> $GITHUB_STEP_SUMMARY
          echo "- All SPDX and legal checks passed." >> $GITHUB_STEP_SUMMARY
          echo "- GPG signed: $(ls RELEASE_NOTES.md.asc 2>/dev/null || echo 'No')." >> $GITHUB_STEP_SUMMARY
          echo "- Attribution, export, and audit complete." >> $GITHUB_STEP_SUMMARY
