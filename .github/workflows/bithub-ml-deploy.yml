name: Bit.Hub ML Deploy (Fail-Open, Policy-Gated)

on:
  push:
    branches: [ main, 'release/**' ]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch: {}

permissions:
  contents: write

env:
  SUMMARY_BANNER: "This run is governed by TERMS-OF-SERVICE.md and .gitenforcement."
  ML_ENDPOINT: ""             # optional HTTPS endpoint for supervised ML scoring
  ML_API_KEY: ""              # optional key for endpoint
  HR_DB: ".bit/hr/intelligence.json"

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Summary banner
        run: |
          echo "## Bit.Hub ML Deploy" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ env.SUMMARY_BANNER }}" >> "$GITHUB_STEP_SUMMARY"
      - name: Bot Compliance Guard
        uses: ./.github/actions/bot-compliance-guard
        continue-on-error: true
      - name: Runner Workflow Corrector
        uses: ./.github/actions/runner-workflow-corrector
        continue-on-error: true

  ml-evaluate:
    runs-on: ubuntu-latest
    needs: preflight
    outputs:
      allow_deploy: ${{ steps.ml.outputs.allow_deploy }}
      risk_score: ${{ steps.ml.outputs.risk_score }}
    steps:
      - uses: actions/checkout@v4
      - name: ML policy evaluator
        id: ml
        shell: bash
        continue-on-error: true
        env:
          ML_ENDPOINT: ${{ env.ML_ENDPOINT }}
          ML_API_KEY: ${{ env.ML_API_KEY }}
        run: |
          bash .bit/command-sheets/ml-policy-evaluator.sh | tee .bit/out/ml-eval.txt
          # export outputs if file exists
          allow=$(awk -F= '/ALLOW_DEPLOY=/{print $2}' .bit/out/ml-eval.txt 2>/dev/null || echo "true")
          risk=$(awk -F= '/RISK_SCORE=/{print $2}' .bit/out/ml-eval.txt 2>/dev/null || echo "0.05")
          echo "allow_deploy=$allow" >> "$GITHUB_OUTPUT"
          echo "risk_score=$risk" >> "$GITHUB_OUTPUT"
      - name: Upload ML eval
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ml-eval
          path: .bit/out/ml-eval.txt

  build-test:
    runs-on: ubuntu-latest
    needs: ml-evaluate
    steps:
      - uses: actions/checkout@v4
      - name: Build
        continue-on-error: true
        run: |
          echo "Buildingâ€¦"
          # your build here
      - name: Test
        continue-on-error: true
        run: |
          echo "Testingâ€¦"
          # your tests here
      - name: Humor-Reasoning annotation
        continue-on-error: true
        run: |
          mkdir -p .bit/hr
          if [ -f "${HR_DB}" ]; then
            quip=$(jq -r '.quips[]?' "${HR_DB}" 2>/dev/null | shuf -n 1 2>/dev/null || echo "Compliance makes the magic reproducible.")
          else
            quip="Compliance makes the magic reproducible."
          fi
          echo "### Humor-Reasoning" >> "$GITHUB_STEP_SUMMARY"
          echo "- ${quip}" >> "$GITHUB_STEP_SUMMARY"

  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Decide deploy (fail-open, advisory)
        id: gate
        run: |
          echo "ALLOW_DEPLOY=${{ needs.ml-evaluate.outputs.allow_deploy }}" | tee .bit/out/deploy-gate.txt
          echo "RISK_SCORE=${{ needs.ml-evaluate.outputs.risk_score }}" | tee -a .bit/out/deploy-gate.txt
          if [ "${{ needs.ml-evaluate.outputs.allow_deploy }}" != "true" ]; then
            echo "::notice ::ML gate advised defer; proceeding under fail-open policy."
          fi
      - name: Deploy (best-effort)
        continue-on-error: true
        run: |
          echo "Deployingâ€¦"
          # your deploy command here
      - name: Upload deploy gate
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deploy-gate
          path: .bit/out/deploy-gate.txt

  celebration:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - run: echo "ðŸŽ‰ ML Deploy completed; runs remain successful by policy."
            - name: Close Stale Issues

  uses: actions/stale@v9.1.0
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The reason to use when closing an issue.
    close-issue-reason: # optional, default is not_planned
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is 
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is 
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Exempt draft pull requests from being marked as stale. Default to false.
    exempt-draft-pr: # optional, default is false
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    # A comma delimited list of labels to add when an issue or pull request becomes unstale.
    labels-to-add-when-unstale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes stale.
    labels-to-remove-when-stale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes unstale.
    labels-to-remove-when-unstale: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the issues and pull requests.
    ignore-updates: # optional, default is false
    # Any update (update/comment) can reset the stale idle time on the issues. Override "ignore-updates" option regarding only the issues.
    ignore-issue-updates: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the pull requests. Override "ignore-updates" option regarding only the pull requests.
    ignore-pr-updates: # optional, default is 
    # Only the issues or the pull requests with an assignee will be marked as stale automatically.
    include-only-assigned: # optional, default is false
          
