name: Bit.Hub Adopt Environment (Reusable)

on:
  workflow_call:
    inputs:
      auto_fix:
        type: boolean
        default: true
      target_ref:
        type: string
        default: "main"

permissions:
  contents: write
  pull-requests: write

env:
  REPORT_DIR: ".bithub/reports"
  YQ_VERSION: "v4.44.3"

jobs:
  adopt:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          BIN="$HOME/.local/bin"; mkdir -p "$BIN"
          curl -fsSL -o "$BIN/yq" "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          chmod +x "$BIN/yq"; echo "$BIN" >> $GITHUB_PATH

      - name: Recognize environments
        id: recog
        uses: ./.github/actions/bithub-environment-recognizer

      - name: Inject required blocks per environment
        run: |
          YQ=yq
          while IFS= read -r line; do
            path=$(jq -r '.path' <<<"$line")
            env=$(jq -r '.env' <<<"$line")

            # Global fixes
            $YQ -i 'if has("permissions") then . else .permissions = {"contents":"read"} end' "$path"
            $YQ -i 'if has("concurrency") then .
                     else .concurrency = {"group":"wf-${{ github.ref }}","cancel-in-progress":false} end' "$path"
            $YQ -i '.jobs |= with_entries(.value."timeout-minutes" = (.value."timeout-minutes" // 30 | tonumber))' "$path"
            $YQ -i '.jobs |= with_entries(.value."runs-on" = (.value."runs-on" // ["self-hosted","bit.hub","linux"]))' "$path"
            $YQ -i '.. | select(tag == "!!str") |= sub("actions/checkout@v[12]$"; "actions/checkout@v4")' "$path"

            # Environment-specific nudges
            if [ "$env" = "container" ]; then
              echo "::notice::Ensuring container labels are set at build step (advisory)"
            fi
          done < "${{ steps.recog.outputs.report_path }}"

      - name: Stage changes
        id: diff
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create PR
        if: inputs.auto_fix == true && steps.diff.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bot/adopt-environment/${{ github.run_id }}
          base: ${{ inputs.target_ref }}
          title: "Bit.Hub: Adopt workflow-environments and inject required blocks"
          commit-message: "chore(bithub): env recognition, inject permissions/concurrency/timeout/runs-on, upgrade checkout"
          body: |
            Automated environment adoption based on .bit/patterns/workflow-environments.yml.
            - Global fixes: permissions, concurrency, timeout-minutes, adaptive runs-on, checkout@v4
            - Env detection: build/test/container/release/docs (advisory)
            Report: ${{ steps.recog.outputs.report_path }}
          labels: compliance, automation
          delete-branch: true

      - name: Always succeed
        run: echo "Adoption completed (never fails)."

                    - name: Download a Build Artifact
  uses: actions/download-artifact@v5.0.0
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # IDs of the artifacts to download, comma-separated. Either inputs `artifact-ids` or `name` can be used, but not both.
    artifact-ids: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}

                      - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v3.4.2
  with:
    # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # optional
    # Optional quality of the build. The possible values are: daily, signed, validated, preview, ga.
    dotnet-quality: # optional
    # Optional global.json location, if your global.json isn't located in the root of the repo.
    global-json-file: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Optional input to enable caching of the NuGet global-packages folder
    cache: # optional
    # Used to specify the path to a dependency file: packages.lock.json. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
        
                - name: Setup Node.js environment
  uses: actions/setup-node@v3.9.1
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
                      - name: Setup Go environmen                                                                                                                                                                 t
  uses: actions/setup-go@v5.5.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
