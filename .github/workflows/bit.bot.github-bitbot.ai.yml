name: "bit.bot BitHub Workflow"

on:
  workflow_run:
    workflows: ["*"]           # Analyze all failed workflows
    types: [completed]
  workflow_dispatch:           # Allow manual triggering

permissions:
  contents: write
  actions: write

jobs:
  analyze_failures:
    name: "Analyze Failed Workflow & Tokenize"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install ALN"
        run: |
          pip install aln-language    # Assumed pip package for ALN
          echo "ALN Installed"

      - name: "Extract Failures"
        run: |
          python scripts/extract_failures.py  # Script analyzes failed workflow_runs

      - name: "Run ALN ML Analysis"
        run: |
          aln analyze failures.log --mode=compound --out=erupted_workflow.aln

      - name: "Save Analysis to Blockchain Storage"
        run: |
          python scripts/push_to_bitblock.py erupted_workflow.aln   # Blockchain-based artifact storage

      - name: "Profanity & Compliance Check"
        run: |
          python scripts/workaround_banter.py erupted_workflow.aln

      - name: "Generate PR with Improved Workflow"
        uses: peter-evans/create-pull-request@v6
        with:
          title: "bit.bot: Automated BitHub Workflow eruption"
          commit-message: "Adds improved workflow from failure analysis"
          branch: "bitbot/erupted/${{ github.run_id }}"
          path: ".github/workflows/bitbot_autogen_${{ github.run_id }}.yml"

  setup_dotnet:
    name: "Setup .NET Core SDK"
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.4.2
        with:
          # dotnet-version, dotnet-quality etc. can be specified as needed
          # dotnet-version: '6.0.x'  # example
          # dotnet-quality: 'ga'     # example
