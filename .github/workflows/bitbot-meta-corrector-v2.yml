name: BitBot Meta Workflow Corrector v2 (Non-Failing)

on:
  workflow_call:
    inputs:
      repair_mode:
        description: "Open a PR with fixes"
        required: false
        default: true
        type: boolean
      target_ref:
        description: "Base branch for PR"
        required: false
        default: "main"
        type: string

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: meta-corrector-v2-${{ github.ref }}
  cancel-in-progress: false

env:
  BIT_HUB_REPO_URL: "https://github.com/Doctor0Evil/Bit.Hub.git"
  REPORT_DIR: ".bithub/reports"
  ARTIFACT_NAME: "meta-corrector-logs"

jobs:
  orchestrate_corrections:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Attempt canonical sync (non-blocking)
        run: |
          set +e
          if git ls-remote "$BIT_HUB_REPO_URL" &>/dev/null; then
            echo "Canonical repo reachable — syncing..."
            git clone --depth=1 "$BIT_HUB_REPO_URL" /tmp/bithub
            rsync -av --ignore-existing /tmp/bithub/.bithub/policy/ .bithub/policy/
            rsync -av --ignore-existing /tmp/bithub/.bit/schemas/ .bit/schemas/
          else
            echo "::warning::Canonical repo $BIT_HUB_REPO_URL not reachable — using local copies."
          fi
          set -e

      - name: Run corrector v2 main logic
        run: |
          echo "Running corrector on branch ${{ inputs.target_ref }}, auto-fix: ${{ inputs.repair_mode }}"
          # Insert main corrector commands here

      - name: Snapshot reports
        run: |
          mkdir -p "${REPORT_DIR}"
          tar -czf meta-corrector-v2.tar.gz "${REPORT_DIR}" || echo "No reports yet."

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: meta-corrector-v2.tar.gz
          if-no-files-found: warn

  always_green:
    needs: orchestrate_corrections
    runs-on: ubuntu-latest
    steps:
      - run: echo "Meta-corrector v2 finished successfully."
