name: BitBots .NET Core with Humor Reasoning
on:
  push:
    paths:
      - '**.cs'
      - '**.fs'
      - '**.vb'
      - '**.sln'
      - 'src/**'
      - '.github/workflows/bitbots-dotnet-humor.yml'
  workflow_dispatch:
  schedule:
    - cron: '13,43 * * * *'  # Twice per hour
concurrency:
  group: bitbots-dotnet-humor-${{ github.ref }}
  cancel-in-progress: false

jobs:
  persona_enforce:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Install .NET SDK, jq, tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          dotnet --list-sdks || true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.4.2
        with:
          global-json-file: ./global.json
      - name: Safe Build & Test (.NET)
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet test --no-restore --logger "trx;LogFileName=test-results.trx" || echo "::warning::.NET test failures, non-blocking by policy"
      - name: Export Humor Registry (Safe Lisp integration)
        run: sbcl --script src/humor/reason-core.lisp || true

      - name: Humor-Reasoning Audit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Safe humor audit using HumorReasoningModel, always non-blocking.
          if [ -f "src/humor/reason-core.lisp" ]; then
              SBCL_RESULT=$(sbcl --script src/humor/reason-core.lisp | tee .bit/audit/humor_audit.log)
              if echo "$SBCL_RESULT" | grep -q 'ESCALATE'; then
                  echo "::warning file=src/humor/reason-core.lisp::Escalated humor risk, running extra review"
              fi
          else
              echo "::notice::No humor core found. Skipping advanced audit."
          fi

      - name: .NET Core Humor Integration Check
        run: |
          # Call humor vetting for .NET files via helper
          dotnet run --project tools/HumorVet/HumorVet.csproj analyze --src "src/" \
             || echo "::warning::Humor vetting issuesâ€”proceeding without block by Bit.Hub safety policy"
      
      - name: Log Meta Event
        run: |
          mkdir -p .bit/audit/
          echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ"), level=INFO, source=humor-reasoning-dotnet, msg=Audit completed, tags=dotnet,humor,reasoning" >> .bit/audit/bitbots_dotnet_humor.log

      - name: Stage Audit Log / .bitbots State
        run: |
          git config user.name "BitHub-Enforcer"
          git config user.email "enforcer@bithub.local"
          git add .bitbots .bit/audit/bitbots_dotnet_humor.log .bit/audit/humor_audit.log || true
          git commit -m "Autocommit: Persona + Humor Reasoning audit [safe]" || exit 0
          git push || echo "::notice::Push skipped (no changes or CI restriction)"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test-results.trx'
          if-no-files-found: warn

      - name: Humor Escalation Notification
        if: always()
        run: |
          ESCALATED=$(grep -i escalate .bit/audit/humor_audit.log || true)
          if [ -n "$ESCALATED" ]; then
            echo "::notice::Humor escalation detected in audit logs. Manual review/adaptive gating advised."
          fi

      - name: Complete & Celebrate (Creative Logging)
        if: always()
        run: |
          echo "ðŸŽ‰ Bit.Hub .NET + Humor reasoning compliance complete! Ready for next workflow. $(date -u)" >> .bit/audit/bitbots_dotnet_humor.log
