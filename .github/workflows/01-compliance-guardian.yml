needs: opa-policy-check
if: needs.opa-policy-check.outputs.policy_passed == 'true'


# .github/workflows/compliance-guardian.yml

name: ComplianceGuardian — ALN Compliance Wall

on:
  push:
    branches: [main, develop, earliest-critical]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write

concurrency:
  group: "compliance-guardian-${{ github.ref }}"
  cancel-in-progress: false

env:
  BITHUB_AUDIT_DIR: .bithub/audit
  BITHUB_LOG_DIR: .bithub/logs
  BITHUB_POLICY_DIR: .bithub/policies
  BITHUB_TRACE_FILE: .bithub/audit/humor-reasoning-trace.json
  BITHUB_OPA_RESULT: .bithub/audit/opa-result.json
  BITHUB_VERDICT_FILE: .bithub/audit/compliance-verdict.json
  HUMOR_LOG: .bithub/logs/humor-bot.log
  COMPLIANCE_LEVEL: strict

jobs:
  compliance-wall:
    name: ALN Gate + Humor/Personality Compliance
    runs-on: windows-latest
    continue-on-error: false
    # ALN interpreter invoked as required for distributed compliance
    steps:
      - uses: actions/checkout@v4

      - name: ALN Compliance Orchestrator Init
        shell: pwsh
        run: |
          Write-Host "::notice::Initializing ALN meta-compliance-guardian…"
          # Full context audit structure output for Bit.Hub/ALN enforcement
          $Context = @{
            Workflow = "${{ github.workflow }}"
            Ref      = "${{ github.ref }}"
            Actor    = "${{ github.actor }}"
            RunId    = "${{ github.run_id }}"
            ComplianceHost = "Bit.Hub"
            Environment = "distributed"
          }
          $Context | ConvertTo-Json | Write-Host

      - name: Run ALN+Compliance Floor
        shell: pwsh
        env:
          OWNER_BITHUB_PRIVATE_KEY_PEM: ${{ secrets.OWNER_BITHUB_PRIVATE_KEY_PEM }}
          OWNER_PERPLEXITY_PRIVATE_KEY_PEM: ${{ secrets.OWNER_PERPLEXITY_PRIVATE_KEY_PEM }}
        run: |
          ./scripts/run-hrm-compliance.ps1 `
            -ComplianceLevel "${{ env.COMPLIANCE_LEVEL }}" `
            -AuditDir "${{ env.BITHUB_AUDIT_DIR }}" `
            -PolicyDir "${{ env.BITHUB_POLICY_DIR }}" `
            -HumorLog "${{ env.HUMOR_LOG }}" `
            -TraceFile "${{ env.BITHUB_TRACE_FILE }}" `
            -OpaResultFile "${{ env.BITHUB_OPA_RESULT }}" `
            -OpaQuery "data.bithub.allow" `
            -FailMode "gate" `
            -AutoInstallOpa

      - name: ALN: Personality/Emotion Vector Indexing
        shell: pwsh
        run: |
          # Example: calls ALN script to annotate and classify emotion/personality content
          ./scripts/aln-compliance-indexer.ps1 `
            -InputFile "${{ env.BITHUB_TRACE_FILE }}" `
            -OutputReport "${{ env.BITHUB_LOG_DIR }}/emotion-index.json" `
            -Model "Bit.Hub.CentralPersonalityMap"

      - name: Write Verdict
        shell: pwsh
        run: |
          $opa = Get-Content "${{ env.BITHUB_OPA_RESULT }}" | ConvertFrom-Json
          $verdict = @{
            pass  = [bool]$opa.pass
            level = "${{ env.COMPLIANCE_LEVEL }}"
            ts    = (Get-Date).ToUniversalTime().ToString("o")
            run   = "${{ github.run_id }}"
            sha   = "${{ github.sha }}"
          }
          $verdict | ConvertTo-Json -Depth 5 | Out-File -FilePath "${{ env.BITHUB_VERDICT_FILE }}" -Encoding utf8

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: complianceguardian-audit
          path: |
            ${{ env.BITHUB_AUDIT_DIR }}
            ${{ env.BITHUB_LOG_DIR }}

###############################
# ALN SECURITY CORE (Hybrid)  #
###############################

aln:
  id: bithub.compliance.wall
  version: 1.0.0
  description: |
    Autonomous compliance wall for distributed federated/AI workflows.
    - Regulates emotion and personality-vector context for all ALN-routable data.
    - Synergizes with Bit.Hub's Humor-Reasoning-Core.
    - Enforces non-interference for central models, prohibits harmful actions.
  policy:
    - restrict_tokens: true     # No public/PAT tokens in workflow logic.
    - allow_funny: true         # Humor allowed; direct emotion forbidden at Intelligence core.
    - central_brain_sealed: true   # No override or external command may alter central model logic.
    - behavior_schema:
        - cannot_be_broken: true
        - cannot_contain_harm: true
        - manual_human_override: false
    - regulate_public_domain:
        - federated_learning: true
        - filter_domains:
            - type: exclude
              match: public
              contexts: [government, open-data, insecure-host]
    - context_indexing:
        - enabled: true
        - annotate: [personality_vector, emotion, compliance_level]
        - index_model: aln-compliance-figure-v1
    - auto_escalate_on_violation: true   # All leaks/incidents escalate, no opt-out.
    - exclude_github_pat: true
    - forbidden_actions:
        - inject_emotion_core: true
        - incite_harm: true
        - manual_seeding: false
    - authorized_owner_enforcement:
        - strict_id: "jacob_farmer"
        - dual_sign: ["owner:bithub","owner:perplexity"]

###############################
# INTERPRETER MAPPINGS (YAML) #
###############################

interpreters:
  - id: ALN
    entrypoints: [aln_compliance_wall, run-hrm-compliance.ps1, aln-compliance-indexer.ps1]
    environments: [BitHub, CentralPersonalityMap]
  - id: Lisp
    entrypoints: [bit.lisp.compliance-enforce]
    environments: [BitHub, DataBank, HumorReasoningCore]
  - id: LOLCODE
    entrypoints: [lolcode_perimeter_enforcer, lolcode_index_annotate]
    environments: [BitHub]

# END HYBRID CONFIG
