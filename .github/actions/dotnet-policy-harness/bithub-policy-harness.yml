name: Bit.Hub .NET Policy Harness
description: Pre/wrap/post enforcement for runner compliance (fail-open)
runs:
  using: composite
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build harness
      shell: bash
      run: |
        dotnet build -c Release src/BitHub.PolicyHarness/BitHub.PolicyHarness.csproj

    - name: PRE gate
      shell: bash
      continue-on-error: true
      run: dotnet run --project src/BitHub.PolicyHarness -- pre

    # Example of wrapping a build command (optional)
    # - name: WRAP build
    #   shell: bash
    #   continue-on-error: true
    #   run: dotnet run --project src/BitHub.PolicyHarness -- wrap -- bash -lc "make build"

    - name: POST finalize
      shell: bash
      continue-on-error: true
      run: dotnet run --project src/BitHub.PolicyHarness -- post
# snippet inside your workload Pod spec after mutation
containers:
  - name: app
    image: ghcr.io/yourorg/yourapp:latest
  - name: bithub-policy-harness
    image: {{ .Values.image.policyHarness }}
    args: ["--pre", "--post"]
    env:
      - name: HR_CORE_JSON
        valueFrom: { configMapKeyRef: { name: central-data-bank, key: hr_core.json } }
      - name: PERSONALITY_MATRIX_JSON
        valueFrom: { configMapKeyRef: { name: central-data-bank, key: personality_matrix.json } }
      - name: THRESHOLDS_JSON
        valueFrom: { configMapKeyRef: { name: central-data-bank, key: thresholds.json } }
    resources:
      requests: { cpu: "50m", memory: "64Mi" }
      limits:   { cpu: "200m", memory: "256Mi" }
